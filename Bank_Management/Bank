import random

class Account:


    def __init__(self, name, email, address, account_type):
        self.name = name
        self.email = email
        self.address = address
        self.account_type = account_type
        self.account_number = random.randint(10000, 99999)
        self.balance = 0
        self.transaction_history = []
        self.loan_taken = 0
        self.loan_limit = 2
    
    def deposit(self, amount):
        self.balance += amount
        self.transaction_history.append(f"Deposited: {amount}")
        print(f"{amount} deposited successfully.")
    
    def withdraw(self, amount):
        if amount > self.balance:
            print("Error: Withdrawal amount exceeded")
        else:
            self.balance -= amount
            self.transaction_history.append(f"Withdrawn: {amount}")
            print(f"{amount} withdrawn successfully.")
    
    def check_balance(self):
        print(f"Current balance: {self.balance}")
    
    def show_transaction_history(self):
        if not self.transaction_history:
            print("No transactions yet.")
        else:
            for transaction in self.transaction_history:
                print(transaction)
    
    def take_loan(self, amount):
        if self.loan_taken >= self.loan_limit:
            print("Error: Loan limit exceeded")
        else:
            self.loan_taken += 1
            self.balance -= amount
            self.transaction_history.append(f"Loan taken: {amount}")
            print(f"Loan of {amount} taken successfully.")
    
    def transfer(self, amount, recipient_account):
        if amount > self.balance:
            print("Error: Transfer amount exceeded")
        elif recipient_account:
            self.balance -= amount
            recipient_account.balance += amount
            self.transaction_history.append(f"Transferred: {amount} to account {recipient_account.account_number}")
            print(f"{amount} transferred successfully.")
        else:
            print("Error: Account does not exist")
    

class Admin:
    def __init__(self):
        self.user_accounts = []
        self.total_loan = 0
        self.bank_total_balance = 0
        self.loan_feature = True
    
    def create_account(self, name, email, address, account_type):
        account = Account(name, email, address, account_type)
        self.user_accounts.append(account)
        print(f"Account created successfully with Account Number: {account.account_number}")
    
    def delete_account(self, account_number):
        for account in self.user_accounts:
            if account.account_number == account_number:
                self.user_accounts.remove(account)
                print(f"Account {account_number} deleted successfully.")
                return
        print("Account not found")
    
    def list_all_accounts(self):
        if not self.user_accounts:
            print("No user accounts available.")
        else:
            for account in self.user_accounts:
                print(f"Account Number: {account.account_number}, Name: {account.name}, Balance: {account.balance}")
    
    def check_total_bank_balance(self):
        self.bank_total_balance = sum(account.balance for account in self.user_accounts)
        print(f"Total available bank balance: {self.bank_total_balance}")
    
    def check_total_loan_amount(self):
        self.total_loan = sum(account.loan_taken for account in self.user_accounts)
        print(f"Total loan amount: {self.total_loan}")
    
    def toggle_loan_feature(self, status):
        self.loan_feature = status
        print(f"Loan feature {'enabled' if status else 'disabled'}.")



def user_menu(user, admin):
    while True:
        print("\n--- User Menu ---")
        print("1. Deposit")
        print("2. Withdraw")
        print("3. Check Balance")
        print("4. Show Transaction History")
        print("5. Take Loan")
        print("6. Transfer Amount")
        print("7. Exit")
        choice = input("Choose an option: ")

        if choice == '1':
            amount = float(input("Enter amount to deposit: "))
            user.deposit(amount)
        elif choice == '2':
            amount = float(input("Enter amount to withdraw: "))
            user.withdraw(amount)
        elif choice == '3':
            user.check_balance()
        elif choice == '4':
            user.show_transaction_history()
        elif choice == '5':
            if admin.loan_feature:
                amount = float(input("Enter loan amount: "))
                user.take_loan(amount)
            else:
                print("Loan feature is disabled by the admin.")
        elif choice == '6':
            recipient_account_number = int(input("Enter recipient's account number: "))
            amount = float(input("Enter amount to transfer: "))
            recipient_account = next((acc for acc in admin.user_accounts if acc.account_number == recipient_account_number), None)
            user.transfer(amount, recipient_account)
        elif choice == '7':
            break
        else:
            print("Invalid option, please try again.")

def admin_menu(admin):
    while True:
        print("\n--- Admin Menu ---")
        print("1. Create User Account")
        print("2. Delete User Account")
        print("3. List All User Accounts")
        print("4. Check Total Bank Balance")
        print("5. Check Total Loan Amount")
        print("6. Toggle Loan Feature")
        print("7. Exit")
        choice = input("Choose an option: ")

        if choice == '1':
            name = input("Enter user name: ")
            email = input("Enter email: ")
            address = input("Enter address: ")
            account_type = input("Enter account type (Savings/Current): ")
            admin.create_account(name, email, address, account_type)
        elif choice == '2':
            account_number = int(input("Enter account number to delete: "))
            admin.delete_account(account_number)
        elif choice == '3':
            admin.list_all_accounts()
        elif choice == '4':
            admin.check_total_bank_balance()
        elif choice == '5':
            admin.check_total_loan_amount()
        elif choice == '6':
            status = input("Enable loan feature? (yes/no): ").lower() == 'yes'
            admin.toggle_loan_feature(status)
        elif choice == '7':
            break
        else:
            print("Invalid option, please try again.")

def main():
    admin = Admin()

    while True:
        print("\n--- Banking Management System ---")
        print("1. User Login")
        print("2. Admin Login")
        print("3. Exit")
        choice = input("Choose an option: ")

        if choice == '1':
            account_number = int(input("Enter your account number: "))
            user = next((acc for acc in admin.user_accounts if acc.account_number == account_number), None)
            if user:
                user_menu(user, admin)
            else:
                print("User account not found.")
        elif choice == '2':
            admin_menu(admin)
        elif choice == '3':
            print("Exit")
            break
        else:
            print("Invalid option")

if __name__ == "__main__":
    main()
